{"version":3,"sources":["layouts/BasicLayout/index.js","components/RacingBarChart.js","pages/index.js","App.js","index.js","layouts/BasicLayout/index.module.less"],"names":["Header","Content","Footer","BasicLayout","children","className","styles","header","logo","style","padding","minHeight","textAlign","sleep","msec","Promise","resolve","setTimeout","RacingBarChart","props","play","a","data","prevDateData","i","length","date","likeCounts","setState","currentDate","translateDate","dateData","users","width","height","svg","yScale","t","d3","duration","on","totalDateData","map","user","value","name","sort","b","max","d","xScale","range","domain","xAxis","select","empty","append","attr","transition","call","selectAll","axis","barsG","bars","enter","merge","bandwidth","labels","exit","remove","tween","selection","this","start","text","end","interpolator","Math","round","chart","React","createRef","state","margin","current","parentNode","clientWidth","clientHeight","rangeRound","ref","Component","clientId","clientSecret","getAllItems","id","token","limit","page","items","fetch","mode","method","headers","Authorization","response","json","concat","getAllLikes","itemId","fetchData","userId","totalLikes","j","item","likes","forEach","createdAt","created_at","moment","format","emptyData","datesData","Object","keys","push","code","body","JSON","stringify","client_id","client_secret","useState","Array","fill","setUsers","validUsers","setValidUsers","setData","setCode","setToken","useRef","useEffect","URL","location","href","searchParams","get","getAccessToken","then","catch","tip","spinning","loading","gutter","key","span","marginBottom","onChange","e","updatedUsers","target","onClick","filter","n","disabled","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.55126325.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n    Layout\n} from 'antd';\n\nimport styles from './index.module.less';\n\nconst {\n    Header,\n    Content,\n    Footer\n} = Layout;\n\nconst BasicLayout = ({\n    children\n}) => {\n    return (\n        <Layout>\n            <Header className={styles.header}>\n                <div className={styles.logo} />\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <div style={{ padding: 24, minHeight: 'calc(100vh - 64px  - 69px)' }}>\n                    {children}\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Â©React App</Footer>\n        </Layout>\n    );\n};\n\nexport default BasicLayout;\n","import React from 'react';\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nconst time = 100;\nlet prevDateData = {};\n\nconst sleep = (msec) => new Promise((resolve) => setTimeout(resolve, msec));\n\nexport default class RacingBarChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chart = React.createRef();\n        this.prevDateData = {};\n        this.state = { currentDate: null };\n    }\n\n    componentDidMount() {\n        const margin = {\n            top: 0, right: 40, bottom: 30, left: 120\n        };\n\n        const width = this.chart.current.parentNode.clientWidth - margin.left - margin.right;\n        const height = this.chart.current.parentNode.clientHeight - margin.top - margin.bottom;\n        this.width = width;\n        this.height = height;\n\n        this.svg = d3.select(this.chart.current)\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        this.yScale = d3.scaleBand()\n            .rangeRound([height, 0], 0.1)\n            .padding(0.4);\n    }\n\n    play = async () => {\n        const { data } = this.props;\n        this.prevDateData = {};\n        for (let i = 0; i < data.length; i++) {\n            const { date, likeCounts } = data[i];\n            await sleep();\n            this.setState({ currentDate: date });\n            await this.translateDate(likeCounts);\n        }\n    }\n\n    translateDate = (dateData) => {\n        const { users } = this.props;\n        const {\n            width,\n            height,\n            svg,\n            yScale\n        } = this;\n\n        return new Promise((resolve) => {\n            const t = d3.transition().duration(time).on('end', resolve);\n\n            const totalDateData = {};\n            const data = users.map((user) => {\n                const value = (this.prevDateData[user] || 0) + (dateData[user] || 0);\n                totalDateData[user] = value;\n                return {\n                    name: user,\n                    value\n                };\n            }).sort((a, b) => d3.ascending(a.value, b.value));\n\n            this.prevDateData = totalDateData;\n\n            const max = d3.max(data, (d) => d.value);\n            const xScale = d3.scaleLinear()\n                .range([0, width])\n                .domain([0, max < 10 ? 10 : max]);\n\n            let xAxis = svg.select('.x.axis');\n            if (xAxis.empty()) {\n                xAxis = svg.append('g')\n                    .attr('class', 'x axis')\n                    .attr('transform', `translate(0,${height})`);\n            }\n\n            xAxis.transition(t)\n                .call(d3.axisBottom(xScale))\n                .selectAll('g');\n\n            yScale.domain(data.map((d) => d.name));\n\n            let axis = svg.select('.y.axis');\n            if (axis.empty()) {\n                axis = svg.append('g')\n                    .attr('class', 'y axis');\n            }\n\n            axis.transition(t)\n                .call(d3.axisLeft(yScale))\n                .selectAll('g');\n\n            let barsG = svg.select('.bars-g');\n            if (barsG.empty()) {\n                barsG = svg.append('g')\n                    .attr('class', 'bars-g');\n            }\n\n            const bars = barsG\n                .selectAll('.bar')\n                .data(data, function (d) {\n                    return d.name;\n                });\n\n            bars\n                .enter()\n                .append('g')\n                .append('rect')\n                .attr('class', 'bar')\n                .attr('x', 0)\n                .style('fill', function () {\n                    // return usercolor[d.name];\n                })\n                .merge(bars)\n                .transition(t)\n                .attr('height', () => yScale.bandwidth())\n                .attr('y', function (d) {\n                    return yScale(d.name);\n                })\n                .attr('width', function (d) {\n                    return xScale(d.value);\n                });\n\n            const labels = barsG\n                .selectAll('.label')\n                .data(data, function (d) {\n                    return d.name;\n                });\n\n            labels.exit().remove();\n\n            labels.enter()\n                .append('g')\n                .append('text')\n                .attr('class', 'label')\n                .attr('x', function (d) {\n                    return 0;\n                })\n                .merge(labels)\n                .transition(t)\n                .attr('y', function (d) {\n                    return yScale(d.name) + yScale.bandwidth() / 2 + 4;\n                })\n                .attr('x', function (d) {\n                    return xScale(d.value) + 3;\n                })\n                .tween('text', function (d) {\n                    const selection = d3.select(this);\n                    const start = d3.select(this).text();\n                    const end = d.value;\n                    const interpolator = d3.interpolateNumber(start, end);\n                    return function (t) { selection.text(Math.round(interpolator(t))); };\n                });\n        });\n    }\n\n    render() {\n        const { currentDate } = this.state;\n        return (\n            <div>\n                <h2>{currentDate}</h2>\n                <div style={{ height: 400 }}>\n                    <svg ref={this.chart} />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {\n    useEffect, useRef, useCallback, useState\n} from 'react';\nimport {\n    Button, Input, Row, Col, Spin\n} from 'antd';\nimport moment from 'moment';\n\nimport Layout from '@/layouts/BasicLayout';\nimport RacingBarChart from '@/components/RacingBarChart';\n\nconst clientId = '6ab1aebe3d1999c206ae14ddbb366f6a65759bf2';\nconst clientSecret = '190fe6a7296c449bf9af82e3d25132e765ad8f3e';\nconst sleep = (msec) => new Promise((resolve) => setTimeout(resolve, msec));\n\nasync function getAllItems(id, token) {\n    const limit = 100;\n    let page = 1;\n\n    let totalCnt;\n    let items = [];\n\n    let current;\n    do {\n        await sleep(10);\n        const response = await fetch(`https://qiita.com/api/v2/users/${id}/items?page=${page}&per_page=${limit}`, {\n            mode: 'cors',\n            method: 'get',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Access-Control-Allow-Headers': 'total-count',\n                'Access-Control-Expose-Headers': 'total-count'\n            },\n        });\n\n        current = await response.json();\n        items = items.concat(current);\n        page++;\n    } while (limit === current.length);\n\n    return items;\n}\n\nasync function getAllLikes(itemId, token) {\n    const limit = 100;\n    let page = 1;\n\n    let totalCnt;\n    let items = [];\n\n    let current;\n    do {\n        await sleep(10);\n        const response = await fetch(`https://qiita.com/api/v2/items/${itemId}/likes?page=${page}&per_page=${limit}`, {\n            mode: 'cors',\n            method: 'get',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Access-Control-Allow-Headers': 'total-count',\n                'Access-Control-Expose-Headers': 'total-count'\n            }\n        });\n\n        current = await response.json();\n        items = items.concat(current);\n        page++;\n    } while (limit === current.length);\n\n    return items;\n}\n\nconst fetchData = async (users, token) => {\n    const data = {};\n    for (let i = 0; i < users.length; i++) {\n        const userId = users[i];\n        const items = await getAllItems(userId, token);\n        let totalLikes = [];\n\n        for (let j = 0; j < items.length; j++) {\n            const item = items[j];\n            const likes = await getAllLikes(item.id, token);\n            totalLikes = totalLikes.concat(likes);\n        }\n\n        totalLikes.forEach(({ created_at: createdAt }) => {\n            const date = moment(createdAt).format('YYYY-MM-DD');\n            if (!data[date]) {\n                data[date] = {};\n            }\n            if (!data[date][userId]) {\n                data[date][userId] = 0;\n            }\n            data[date][userId]++;\n        });\n    }\n\n    const emptyData = {};\n    users.forEach((user) => {\n        emptyData[user] = 0;\n    });\n\n    const datesData = [];\n    Object.keys(data).forEach((date) => {\n        datesData.push({\n            date,\n            likeCounts: { ...emptyData, ...data[date] }\n        });\n    });\n\n    datesData.sort((a, b) => moment(a.date) - moment(b.date));\n\n    return datesData;\n};\n\nasync function getAccessToken(code) {\n    const response = await fetch('https://qiita.com/api/v2/access_tokens', {\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(\n            {\n                client_id: clientId,\n                client_secret: clientSecret,\n                code\n            }\n        )\n    });\n\n    const { token } = await response.json();\n    return token;\n}\n\nconst userCount = 8;\n\nexport default () => {\n    const [users, setUsers] = useState(Array(userCount).fill(null));\n    const [validUsers, setValidUsers] = useState(null);\n    const [data, setData] = useState(null);\n    const [code, setCode] = useState(null);\n    const [token, setToken] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const url = new URL(location.href);\n        const code = url.searchParams.get('code');\n        if (!code) {\n            location.href = `https://qiita.com/api/v2/oauth/authorize?client_id=${clientId}&scope=read_qiita`;\n        }\n        setCode(code);\n    }, [])\n\n    useEffect(() => {\n        if (!code) {\n            return;\n        }\n\n        getAccessToken(code).then((token) => {\n            setToken(token);\n        }).catch(() => {\n            location.href = `https://qiita.com/api/v2/oauth/authorize?client_id=${clientId}&scope=read_qiita`;\n        });\n    }, [code]);\n\n    return (\n        <Layout>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                <Row gutter={8}>\n                    {users.map((user, i) => {\n                        return (\n                            <Col key={i} span={6} style={{ marginBottom: 8 }}>\n                                <Input\n                                    value={user}\n                                    onChange={(e) => {\n                                        const updatedUsers = [...users];\n                                        updatedUsers[i] = e.target.value;\n                                        setUsers(updatedUsers);\n                                    }}\n                                />\n                            </Col>\n                        );\n                    })}\n                </Row>\n                <div style={{ textAlign: 'right' }}>\n                    <Button\n                        onClick={async () => {\n                            const validUsers = users.filter((n) => n);\n                            const data = await fetchData(validUsers, token);\n                            setData(data);\n                            setValidUsers(validUsers);\n                        }}\n                        disabled={!token}\n                    >\n                        åå¾\n                </Button>\n                    <Button\n                        onClick={() => {\n                            ref.current.play();\n                        }}\n                        disabled={!data}\n                    >\n                        å®è¡\n                </Button>\n                </div>\n                <div style={{ width: '100%', height: 500 }}>\n                    <RacingBarChart ref={ref} data={data} users={validUsers} />\n                </div>\n            </Spin>\n        </Layout>\n    );\n};\n","import React from 'react';\nimport Page from '@/pages';\n\nfunction App() {\n    return <Page />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.less';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"src-layouts-BasicLayout-index-module__header--2S57j\",\"logo\":\"src-layouts-BasicLayout-index-module__logo--1Hx4w\",\"spacer\":\"src-layouts-BasicLayout-index-module__spacer--1sAL6\"};"],"sourceRoot":""}